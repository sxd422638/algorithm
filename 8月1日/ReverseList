/*
struct ListNode {
	int val;
	struct ListNode *next;
	ListNode(int x) :
			val(x), next(NULL) {
	}
};*/
//方法一：三指针法    先逆置 ， 再后移 ， 再盘点
class Solution {
public:
    ListNode* ReverseList(ListNode* pHead) 
    {
        if(pHead == nullptr || pHead->next == nullptr)
        {
            return pHead;
        }
        ListNode* first = pHead;
        ListNode* second = first->next;
        ListNode* third = second->next;
        while(third)
        {
            second->next = first;
            first = second;
            second = third;
            third = third->next;
            
        }
        second->next = first ;//当传入的节点只有两个或者上述反转结束时 最后一个节点还未翻转
        pHead->next = nullptr;
        pHead = second;
        return pHead;

    }
};
